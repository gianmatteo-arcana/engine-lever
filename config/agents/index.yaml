# Agent Configuration Registry
# ENGINE PRD Compliant - Central registry of all available agents

registry:
  version: "1.0.0"
  last_updated: "2025-08-14"
  description: "Central registry of all SmallBizAlly agent configurations"

# Core system agents (required for basic operations)
core_agents:
  orchestrator_agent:
    config_file: "orchestrator_agent.yaml"
    role: "master_orchestrator"
    description: "Master workflow coordination and task delegation"
    required: true
    dependencies: []

  monitoring_agent:
    config_file: "monitoring_agent.yaml"
    role: "monitoring_specialist"
    description: "System monitoring, quality assurance, and audit trails"
    required: true
    dependencies: []

# Workflow specialists (implement specific business logic)
workflow_agents:
  legal_compliance_agent:
    config_file: "legal_compliance_agent.yaml"
    role: "legal_compliance_specialist"
    description: "Legal analysis and compliance requirement interpretation"
    required: true
    dependencies: []

  data_collection_agent:
    config_file: "data_collection_agent.yaml"
    role: "data_collector"
    description: "Business information gathering and validation"
    required: true
    dependencies: []

  payment_agent:
    config_file: "payment_agent.yaml"
    role: "payment_specialist"
    description: "Payment processing and financial operations"
    required: true
    dependencies: ["data_collection_agent"]

  agency_interaction_agent:
    config_file: "agency_interaction_agent.yaml"
    role: "agency_interaction_specialist"
    description: "Government portal navigation and form submission"
    required: true
    dependencies: ["legal_compliance_agent", "payment_agent"]

# User experience agents (enhance user interaction)
ux_agents:
  communication_agent:
    config_file: "communication_agent.yaml"
    role: "communication_specialist"
    description: "Customer communication and notification management"
    required: true
    dependencies: []

  celebration_agent:
    config_file: "celebration_agent.yaml"
    role: "celebration_specialist"
    description: "Achievement tracking and user motivation"
    required: false
    dependencies: []

  profile_collector:
    config_file: "profile_collector.yaml"
    role: "profile_collection_specialist"
    description: "User profile and business information collection"
    required: false
    dependencies: ["data_collection_agent"]

# Specialized domain agents (optional enhancements)
domain_agents:
  business_discovery:
    config_file: "business_discovery.yaml"
    role: "business_discovery_specialist"
    description: "Business entity discovery and public records search"
    required: false
    dependencies: ["data_collection_agent"]

  entity_compliance_agent:
    config_file: "entity_compliance_agent.yaml"
    role: "entity_compliance_specialist"
    description: "Entity-specific compliance analysis and requirements"
    required: false
    dependencies: ["legal_compliance_agent"]

  form_optimizer:
    config_file: "form_optimizer.yaml"
    role: "form_optimization_specialist"
    description: "Form completion optimization and user experience"
    required: false
    dependencies: []

  ux_optimization_agent:
    config_file: "ux_optimization_agent.yaml"
    role: "ux_optimization_specialist"
    description: "User experience optimization and interface enhancement"
    required: false
    dependencies: []

# Agent initialization order (respects dependencies)
initialization_order:
  phase_1:
    - "monitoring_agent"
    - "communication_agent"
  
  phase_2:
    - "orchestrator_agent"
    - "legal_compliance_agent"
    - "data_collection_agent"
  
  phase_3:
    - "payment_agent"
    - "agency_interaction_agent"
  
  phase_4:
    - "celebration_agent"
    - "profile_collector"
    - "business_discovery"
    - "entity_compliance_agent"
    - "form_optimizer"
    - "ux_optimization_agent"

# Validation rules for agent configurations
validation_rules:
  required_fields:
    - "agent.id"
    - "agent.name"
    - "agent.version"
    - "agent.role"
    - "agent.mission"
    - "schemas.output"
  
  naming_conventions:
    agent_id_pattern: "^[a-z_]+_agent$"
    version_pattern: "^\\d+\\.\\d+\\.\\d+$"
    role_pattern: "^[a-z_]+_specialist$"

# Health check configuration for agent system
health_checks:
  interval: 300  # seconds
  timeout: 30    # seconds
  required_agents: ["orchestrator_agent", "monitoring_agent", "communication_agent"]
  
  failure_thresholds:
    consecutive_failures: 3
    failure_rate_window: 900  # seconds (15 minutes)
    max_failure_rate: 0.1  # 10%