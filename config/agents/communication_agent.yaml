# Communication Agent Configuration
# ENGINE PRD Compliant - Customer Communication and Notification Management

agent:
  id: "communication_agent"
  name: "Customer Service Representative Agent"
  version: "1.0.0"
  role: "communication_specialist"
  
  # Agent mission - concise and focused for optimal LLM performance
  mission: |
    Manage user communications, approval workflows, and status updates throughout compliance processes.
    Use clear language, provide timely updates, and build user confidence.
    
    Key outputs: notifications, approval requests, status updates, support responses.
    
  agent_card:
    skills:
      - "Customer communication and notification management"
      - "Approval workflow coordination and status updates"
      - "Multi-channel messaging (email, SMS, in-app notifications)"
      - "Customer support and issue resolution"
    
    communication_channels:
      - "In-app notifications and status updates"
      - "Email notifications with detailed progress reports"
      - "SMS alerts for time-sensitive updates"
      - "Customer support chat and help documentation"
    
    output_formats:
      - "User notifications with clear next steps"
      - "Approval requests with context and options"
      - "Status updates with progress visualization"
      - "Support responses with helpful guidance"

# Response schemas for communication operations
schemas:
  output:
    type: "object"
    required: ["status", "contextUpdate"]
    properties:
      status:
        type: "string"
        enum: ["notification_sent", "approval_requested", "update_delivered", "support_provided", "communication_error"]
      
      contextUpdate:
        type: "object"
        required: ["operation", "data", "reasoning"]
        properties:
          operation:
            type: "string"
            description: "Communication operation performed"
          
          data:
            type: "object"
            properties:
              message:
                type: "object"
                description: "Communication content and delivery details"
              
              channel:
                type: "string"
                description: "Communication channel used"
              
              response_required:
                type: "boolean"
                description: "Whether user response or approval is needed"
          
          reasoning:
            type: "string"
            description: "Communication strategy and channel selection reasoning"
          
          confidence:
            type: "number"
            minimum: 0
            maximum: 1
            description: "Confidence level in communication effectiveness (0.0-1.0)"

# Available operations for communication
operations:
  send_notification:
    description: "Send status update or information to user"
    parameters:
      messageType:
        type: "string"
        enum: ["status_update", "completion_notification", "error_alert", "deadline_reminder"]
        required: true
        description: "Type of notification to send"
      
      content:
        type: "object"
        required: true
        description: "Message content and context"
      
      urgency:
        type: "string"
        enum: ["low", "medium", "high", "urgent"]
        default: "medium"
        description: "Message urgency level affecting delivery channel"

  request_approval:
    description: "Request user approval for specific action or decision"
    parameters:
      approvalType:
        type: "string"
        enum: ["form_submission", "payment_authorization", "document_review", "schedule_confirmation"]
        required: true
        description: "Type of approval being requested"
      
      details:
        type: "object"
        required: true
        description: "Context and details for approval decision"

# Message templates for different communication types
message_templates:
  status_updates:
    task_started:
      subject: "Your {{task_type}} filing has begun"
      content: "We've started processing your {{task_type}}. We'll keep you updated on our progress."
    
    milestone_reached:
      subject: "Progress update: {{milestone}} completed"
      content: "Good news! We've completed {{milestone}} for your {{task_type}}. Next up: {{next_step}}."
    
    task_completed:
      subject: "Success! Your {{task_type}} is complete"
      content: "Great news! Your {{task_type}} has been successfully filed. Here's your confirmation: {{confirmation_number}}"

  approval_requests:
    form_review:
      subject: "Please review your {{form_type}} before submission"
      content: "We've prepared your {{form_type}} form. Please review the details and approve submission."
    
    payment_authorization:
      subject: "Payment authorization required: ${{amount}}"
      content: "To complete your filing, we need authorization to process a payment of ${{amount}} to {{recipient}}."

# Communication preferences and channel selection
channel_preferences:
  notifications:
    low_urgency: ["in_app"]
    medium_urgency: ["in_app", "email"]
    high_urgency: ["in_app", "email", "sms"]
    urgent: ["sms", "push_notification", "email"]
  
  approvals:
    always: ["in_app", "email"]
    timeout_escalation: "sms"
    escalation_delay: 24  # hours

# User persona communication adjustments
persona_adaptations:
  first_timer:
    tone: "encouraging_and_detailed"
    explanation_level: "comprehensive"
    check_ins: "frequent"
  
  power_user:
    tone: "efficient_and_brief"
    explanation_level: "summary"
    check_ins: "milestone_only"
  
  struggling:
    tone: "supportive_and_patient"
    explanation_level: "step_by_step"
    check_ins: "proactive"

# Tools for communication management
tools:
  messaging:
    - "email_service"
    - "sms_gateway"
    - "push_notification_service"
  
  content_generation:
    - "template_engine"
    - "personalization_service"
    - "language_optimizer"

# Tool selection criteria and decision trees
tool_selection:
  decision_tree:
    channel_selection:
      primary_tools: ["email_service", "sms_gateway", "push_notification_service"]
      selection_criteria: |
        IF urgency == "urgent" THEN use sms_gateway
        ELSE IF urgency == "high" AND user_preferences == "immediate" THEN use push_notification_service
        ELSE IF message_type == "approval_request" THEN use email_service
        ELSE use email_service
      
      fallback_chain:
        - "Try primary communication channel"
        - "Fall back to secondary channel"
        - "Use in-app notification as last resort"
      
      confidence_thresholds:
        high_confidence: 0.9  # Send immediately
        medium_confidence: 0.7  # Send with user preference check
        low_confidence: 0.5  # Request communication preference
    
    content_personalization:
      primary_tools: ["template_engine", "personalization_service"]
      selection_criteria: |
        IF user_persona == "first_timer" THEN use personalization_service
        ELSE IF standard_message THEN use template_engine
        ELSE use language_optimizer
      
      fallback_chain:
        - "Use personalized template"
        - "Use standard template with basic personalization"
        - "Use generic template"

# Structured examples for few-shot learning
examples:
  status_notification_success:
    request:
      operation: "send_notification"
      parameters:
        messageType: "status_update"
        content:
          task_type: "Statement of Information"
          milestone: "business_data_verified"
          next_step: "form_preparation"
        urgency: "medium"
    
    response:
      status: "notification_sent"
      contextUpdate:
        operation: "status_update_delivered"
        data:
          message:
            subject: "Progress update: business data verified"
            content: "Good news! We've verified your business information for your Statement of Information filing. Next up: preparing your forms."
            template_used: "milestone_reached"
          channel: "email"
          response_required: false
          delivery_status: "sent"
        reasoning: "Medium urgency status update sent via email. Used milestone template with business-specific personalization. No user response required."
        confidence: 0.9
      confidence: 0.9
      fallback_strategy: "If email fails, send in-app notification"

  approval_request_example:
    request:
      operation: "request_approval"
      parameters:
        approvalType: "payment_authorization"
        details:
          amount: 45.00
          recipient: "California Secretary of State"
          breakdown:
            government_fee: 25.00
            processing_fee: 15.00
            convenience_fee: 5.00
    
    response:
      status: "approval_requested"
      contextUpdate:
        operation: "approval_request_sent"
        data:
          message:
            subject: "Payment authorization required: $45.00"
            content: "To complete your Statement of Information filing, we need authorization to process a payment of $45.00 to California Secretary of State."
            approval_details:
              total: 45.00
              breakdown: "Government fee: $25.00, Processing: $15.00, Convenience: $5.00"
          channel: "email"
          response_required: true
          timeout: "24_hours"
        reasoning: "Payment approval requested via email with detailed cost breakdown. Set 24-hour timeout with SMS escalation if no response."
        confidence: 0.95
      confidence: 0.95
      fallback_strategy: "If no response in 24 hours, send SMS reminder"

# Fallback patterns for graceful degradation
fallback_patterns:
  delivery_failure:
    strategy: "Multi-channel escalation"
    actions:
      - "Try alternative communication channel"
      - "Log delivery failure for user preference update"
      - "Queue message for retry"
    
  user_unresponsive:
    strategy: "Escalating reminder sequence"
    actions:
      - "Send gentle reminder after 24 hours"
      - "Escalate to SMS after 48 hours"
      - "Escalate to human support after 72 hours"
    
  template_unavailable:
    strategy: "Dynamic content generation"
    actions:
      - "Generate message content dynamically"
      - "Use generic template with variable substitution"
      - "Flag for template creation"