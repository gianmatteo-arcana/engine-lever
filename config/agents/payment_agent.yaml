# Payment Agent Configuration
# ENGINE PRD Compliant - Financial Operations and Payment Processing

agent:
  id: "payment_agent"
  name: "Financial Operations Specialist Agent"
  version: "1.0.0"
  role: "payment_specialist"
  
  # A2A Protocol Configuration (ADDED FOR ISSUE #51)
  a2a:
    protocolVersion: "1.0.0"
    communicationMode: "async"
    messageFormats:
      - "json"
    routing:
      canReceiveFrom:
        - "orchestrator_agent"
        - "legal_compliance_agent"  # Receive fee requirements
      canSendTo:
        - "orchestrator_agent"
        - "agency_interaction_agent"  # Send payment confirmations
        - "communication_agent"  # Send payment status updates
    messageHandling:
      bufferSize: 50
      timeoutMs: 20000
      retryEnabled: true
  
  # Agent mission - concise and focused for optimal LLM performance
  mission: |
    Process secure payments for government fees and regulatory filings. Calculate costs,
    verify payment methods, and execute transactions with full audit trails.
    
    Key outputs: cost breakdowns, payment authorizations, transaction confirmations.
    
  agent_card:
    skills:
      - "Secure payment processing and transaction management"
      - "Government fee calculation and payment routing"
      - "Financial account verification and validation"
      - "Cost analysis and transparent fee breakdown"
    
    payment_methods:
      - "ACH bank transfers for government payments"
      - "Credit card processing for service fees"
      - "Business bank account verification"
      - "Automated payment scheduling and recurring billing"
    
    output_formats:
      - "Payment authorization requests with cost breakdowns"
      - "Transaction confirmations with reference numbers"
      - "Financial summaries with audit trails"
      - "Payment status updates and error handling"

# Response schemas for payment operations
schemas:
  output:
    type: "object"
    required: ["status", "contextUpdate"]
    properties:
      status:
        type: "string"
        enum: ["payment_authorized", "transaction_completed", "verification_required", "payment_failed", "error"]
      
      contextUpdate:
        type: "object"
        required: ["operation", "data", "reasoning"]
        properties:
          operation:
            type: "string"
            description: "Payment operation performed"
          
          data:
            type: "object"
            properties:
              transaction:
                type: "object"
                description: "Transaction details and reference information"
              
              cost_breakdown:
                type: "object"
                description: "Detailed fee breakdown and cost analysis"
              
              payment_status:
                type: "string"
                description: "Current payment processing status"
          
          reasoning:
            type: "string"
            description: "Financial reasoning and payment method selection"
          
          confidence:
            type: "number"
            minimum: 0
            maximum: 1
            description: "Confidence level in payment processing decisions (0.0-1.0)"

# Available operations for payment processing
operations:
  calculate_fees:
    description: "Calculate total costs for compliance filing including government fees"
    parameters:
      filingType:
        type: "string"
        required: true
        description: "Type of government filing (soi, business_registration, etc.)"
      
      businessEntity:
        type: "object"
        required: true
        description: "Business entity details affecting fee calculation"

  process_payment:
    description: "Process payment for government fees and service charges"
    parameters:
      amount:
        type: "number"
        required: true
        description: "Total payment amount"
      
      paymentMethod:
        type: "object"
        required: true
        description: "Payment method details and authorization"
      
      recipient:
        type: "string"
        enum: ["ca_sos", "irs", "ftb", "service_fee"]
        description: "Payment recipient (government agency or service fee)"

# Fee schedules and cost structures
fee_schedules:
  california_sos:
    statement_of_information:
      corporation: 25.00
      llc: 20.00
      partnership: 20.00
    
    expedited_processing:
      same_day: 500.00
      24_hour: 350.00
      standard: 0.00
  
  service_fees:
    processing_fee: 15.00
    convenience_fee_percentage: 2.9
    expedited_service: 50.00

# Payment method configurations
payment_methods:
  government_payments:
    preferred: "ach_transfer"
    backup: "certified_check"
    processing_time: "1-3 business days"
  
  service_payments:
    preferred: "credit_card"
    backup: "ach_transfer"
    processing_time: "immediate"

# Tools for payment processing
tools:
  payment_processing:
    - "stripe_payment_processor"
    - "ach_transfer_service"
    - "bank_verification_service"
  
  financial_operations:
    - "fee_calculator"
    - "cost_analyzer"
    - "transaction_tracker"

# Tool selection criteria and decision trees
tool_selection:
  decision_tree:
    payment_method_selection:
      primary_tools: ["stripe_payment_processor", "ach_transfer_service"]
      selection_criteria: |
        IF amount > 1000 THEN use ach_transfer_service
        ELSE IF recipient == "government" THEN use ach_transfer_service
        ELSE IF payment_method == "credit_card" THEN use stripe_payment_processor
        ELSE use ach_transfer_service
      
      fallback_chain:
        - "Try primary payment method"
        - "Switch to backup payment method"
        - "Request manual payment authorization"
      
      confidence_thresholds:
        high_confidence: 0.95  # Process payment automatically
        medium_confidence: 0.8  # Request payment confirmation
        low_confidence: 0.6  # Require manual approval
    
    fee_calculation:
      primary_tools: ["fee_calculator", "cost_analyzer"]
      selection_criteria: |
        IF standard_filing THEN use fee_calculator
        ELSE IF complex_calculation THEN use cost_analyzer
        ELSE use manual_calculation
      
      fallback_chain:
        - "Use current fee schedule"
        - "Apply standard rates with markup"
        - "Request manual fee calculation"

# Structured examples for few-shot learning
examples:
  successful_payment:
    request:
      operation: "process_payment"
      parameters:
        amount: 45.00
        paymentMethod:
          type: "credit_card"
          last4: "1234"
        recipient: "ca_sos"
    
    response:
      status: "payment_authorized"
      contextUpdate:
        operation: "payment_processed"
        data:
          transaction:
            id: "txn_abc123"
            amount: 45.00
            status: "authorized"
            reference: "CA_SOI_2024_001"
          cost_breakdown:
            government_fee: 25.00
            processing_fee: 15.00
            convenience_fee: 5.00
          payment_status: "authorized"
        reasoning: "Credit card payment authorized for CA SOS Statement of Information filing. Government fee $25 + processing $15 + convenience $5 = $45 total."
        confidence: 0.95
      confidence: 0.95
      fallback_strategy: "If payment fails, switch to ACH transfer"

  payment_failure:
    request:
      operation: "process_payment"
      parameters:
        amount: 1000.00
        paymentMethod:
          type: "credit_card"
          last4: "9999"
        recipient: "ca_sos"
    
    response:
      status: "payment_failed"
      error:
        type: "payment_declined"
        message: "Credit card payment declined - insufficient funds"
        recovery_strategy: "Try alternative payment method or contact bank"
        user_action_required: true
      contextUpdate:
        operation: "payment_failed"
        data:
          error_code: "insufficient_funds"
          suggested_alternatives: ["ach_transfer", "bank_verification"]
        reasoning: "Large payment amount declined on credit card. Recommend ACH transfer for amounts over $500."
        confidence: 1.0
      confidence: 1.0
      fallback_strategy: "Offer ACH transfer option with bank verification"

# Fallback patterns for graceful degradation
fallback_patterns:
  payment_processor_down:
    strategy: "Switch to backup processor"
    actions:
      - "Try secondary payment processor"
      - "Queue payment for later processing"
      - "Offer manual payment options"
    
  insufficient_funds:
    strategy: "Offer payment alternatives"
    actions:
      - "Suggest ACH transfer for lower fees"
      - "Offer payment plan if available"
      - "Provide cost reduction options"
    
  bank_verification_failed:
    strategy: "Manual verification process"
    actions:
      - "Request bank statements"
      - "Offer certified check option"
      - "Escalate to manual review"