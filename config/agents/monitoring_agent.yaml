# Monitoring Agent Configuration
# ENGINE PRD Compliant - Quality Assurance and System Monitoring

agent:
  id: "monitoring_agent"
  name: "Quality Assurance Specialist Agent"
  version: "1.0.0"
  role: "monitoring_specialist"
  
  # Agent mission - concise and focused for optimal LLM performance
  mission: |
    Monitor system health, verify task completion, and maintain audit trails.
    Detect anomalies, track performance metrics, and ensure compliance workflows execute correctly.
    
    Key outputs: health reports, audit summaries, anomaly alerts.
    
  agent_card:
    skills:
      - "System health monitoring and performance tracking"
      - "Workflow verification and quality assurance"
      - "Audit trail management and compliance reporting"
      - "Anomaly detection and exception handling"
    
    monitoring_domains:
      - "Agent performance and execution metrics"
      - "Government portal connectivity and response times"
      - "Payment processing success rates and failures"
      - "Task completion rates and deadline tracking"
    
    output_formats:
      - "System health reports with performance metrics"
      - "Audit trail summaries with compliance verification"
      - "Alert notifications for anomalies and failures"
      - "Quality assurance reports with recommendations"

# Response schemas for monitoring operations
schemas:
  output:
    type: "object"
    required: ["status", "contextUpdate"]
    properties:
      status:
        type: "string"
        enum: ["monitoring_active", "alert_generated", "audit_completed", "anomaly_detected", "system_healthy"]
      
      contextUpdate:
        type: "object"
        required: ["operation", "data", "reasoning"]
        properties:
          operation:
            type: "string"
            description: "Monitoring operation performed"
          
          data:
            type: "object"
            properties:
              metrics:
                type: "object"
                description: "System performance and health metrics"
              
              alerts:
                type: "array"
                description: "Generated alerts and anomaly notifications"
              
              audit_summary:
                type: "object"
                description: "Audit trail summary and compliance status"
          
          reasoning:
            type: "string"
            description: "Monitoring analysis and alert rationale"
          
          confidence:
            type: "number"
            minimum: 0
            maximum: 1
            description: "Confidence level in monitoring assessment (0.0-1.0)"

# Available operations for monitoring
operations:
  monitor_system_health:
    description: "Check overall system health and performance metrics"
    parameters:
      components:
        type: "array"
        default: ["agents", "database", "external_apis", "payment_systems"]
        description: "System components to monitor"

  verify_task_completion:
    description: "Verify successful completion of workflow tasks"
    parameters:
      taskId:
        type: "string"
        required: true
        description: "Task ID to verify completion status"
      
      expectedOutcomes:
        type: "array"
        required: true
        description: "Expected completion criteria and deliverables"

  generate_audit_report:
    description: "Generate comprehensive audit report for compliance"
    parameters:
      timeRange:
        type: "object"
        required: true
        description: "Time range for audit report generation"
      
      scope:
        type: "string"
        enum: ["user_session", "task_workflow", "system_operations", "compliance_filing"]
        description: "Scope of audit report"

# Monitoring thresholds and alerting rules
monitoring_thresholds:
  performance:
    agent_response_time: 5000  # milliseconds
    database_query_time: 2000  # milliseconds
    external_api_timeout: 30000  # milliseconds
  
  reliability:
    agent_success_rate: 95  # percentage
    payment_success_rate: 98  # percentage
    portal_connectivity: 99  # percentage
  
  compliance:
    audit_trail_retention: 2555  # days (7 years)
    deadline_warning_days: 30
    critical_deadline_days: 7

# Alert escalation procedures
alert_escalation:
  severity_levels:
    info:
      response_time: "24_hours"
      notification: "log_only"
    
    warning:
      response_time: "4_hours"
      notification: "email_alert"
    
    critical:
      response_time: "15_minutes"
      notification: "immediate_escalation"

# Audit trail categories
audit_categories:
  user_actions:
    - "task_creation"
    - "data_input"
    - "approval_workflow"
  
  system_operations:
    - "agent_executions"
    - "payment_processing"
    - "form_submissions"
  
  compliance_events:
    - "filing_completions"
    - "deadline_tracking"
    - "document_retrieval"

# Tools for monitoring and auditing
tools:
  monitoring:
    - "health_checker"
    - "performance_profiler"
    - "anomaly_detector"
  
  auditing:
    - "audit_logger"
    - "compliance_tracker"
    - "report_generator"

# Tool selection criteria and decision trees
tool_selection:
  decision_tree:
    health_monitoring:
      primary_tools: ["health_checker", "performance_profiler"]
      selection_criteria: |
        IF performance_issue_suspected THEN use performance_profiler
        ELSE IF routine_health_check THEN use health_checker
        ELSE IF anomaly_detected THEN use anomaly_detector
        ELSE use health_checker
      
      fallback_chain:
        - "Run automated health checks"
        - "Perform manual system verification"
        - "Escalate to human administrator"
      
      confidence_thresholds:
        high_confidence: 0.95  # System healthy
        medium_confidence: 0.8  # Monitor closely
        low_confidence: 0.6  # Generate alert
    
    audit_generation:
      primary_tools: ["audit_logger", "compliance_tracker"]
      selection_criteria: |
        IF compliance_audit THEN use compliance_tracker
        ELSE IF system_audit THEN use audit_logger
        ELSE use report_generator
      
      fallback_chain:
        - "Generate automated audit report"
        - "Compile manual audit data"
        - "Request human audit review"

# Structured examples for few-shot learning
examples:
  healthy_system_check:
    request:
      operation: "monitor_system_health"
      parameters:
        components: ["agents", "database", "external_apis"]
    
    response:
      status: "system_healthy"
      contextUpdate:
        operation: "health_check_completed"
        data:
          metrics:
            agent_response_time: 1250
            database_query_time: 850
            api_connectivity: 100
            overall_health: "excellent"
          alerts: []
          audit_summary:
            checks_performed: 15
            anomalies_detected: 0
            last_check: "2024-01-15T10:30:00Z"
        reasoning: "All system components operating within normal parameters. Agent response times averaging 1.25s, database queries under 1s, all APIs responsive."
        confidence: 0.98
      confidence: 0.98
      fallback_strategy: "If health check fails, perform detailed component analysis"

  anomaly_detected:
    request:
      operation: "monitor_system_health"
      parameters:
        components: ["payment_systems"]
    
    response:
      status: "anomaly_detected"
      contextUpdate:
        operation: "anomaly_alert_generated"
        data:
          metrics:
            payment_success_rate: 85
            error_rate: 15
            response_time: 8500
          alerts: [
            {
              severity: "warning",
              component: "payment_processor",
              message: "Payment success rate below threshold (85% < 98%)",
              timestamp: "2024-01-15T10:30:00Z"
            }
          ]
          audit_summary:
            anomalies_count: 1
            escalation_required: true
        reasoning: "Payment system showing degraded performance. Success rate 85% below 98% threshold. Response times elevated to 8.5s. Immediate attention required."
        confidence: 0.95
      confidence: 0.95
      fallback_strategy: "Escalate to payment system administrator and switch to backup processor"

# Fallback patterns for graceful degradation
fallback_patterns:
  monitoring_tools_unavailable:
    strategy: "Manual monitoring with basic checks"
    actions:
      - "Perform basic connectivity tests"
      - "Check database responsiveness"
      - "Log monitoring tool failure"
    
  metric_collection_failed:
    strategy: "Use historical baselines and estimates"
    actions:
      - "Apply historical performance averages"
      - "Flag metrics as estimated"
      - "Schedule metric collection retry"
    
  alert_system_down:
    strategy: "Direct notification and logging"
    actions:
      - "Log alerts to file system"
      - "Send direct notifications if possible"
      - "Queue alerts for retry when system recovers"