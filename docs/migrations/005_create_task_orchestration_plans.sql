-- Migration: Create task_orchestration_plans table (optional for MVP, but good for debugging)
-- Location: This file should be created in frontend repo at:
-- biz-buddy-ally-now/supabase/migrations/[timestamp]_create_task_orchestration_plans.sql

CREATE TABLE IF NOT EXISTS task_orchestration_plans (
  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  task_id UUID REFERENCES tasks(id) ON DELETE CASCADE NOT NULL,
  
  -- Declarative plan
  goals JSONB NOT NULL DEFAULT '[]',
  constraints JSONB DEFAULT '{}',
  success_criteria JSONB DEFAULT '{}',
  
  -- Dynamic execution plan
  execution_plan JSONB NOT NULL DEFAULT '{}',
  plan_version INTEGER DEFAULT 1,
  is_active BOOLEAN DEFAULT TRUE,
  
  -- LLM metadata
  llm_model TEXT,
  llm_prompt_template TEXT,
  llm_response JSONB,
  llm_tokens_used INTEGER,
  
  -- Execution tracking
  steps_completed INTEGER DEFAULT 0,
  steps_total INTEGER DEFAULT 0,
  
  -- Metadata
  created_at TIMESTAMPTZ DEFAULT NOW(),
  updated_at TIMESTAMPTZ DEFAULT NOW()
);

-- Create indexes for performance
CREATE INDEX idx_orch_plan_task ON task_orchestration_plans(task_id);
CREATE INDEX idx_orch_plan_version ON task_orchestration_plans(task_id, plan_version DESC);
CREATE INDEX idx_orch_plan_active ON task_orchestration_plans(is_active) WHERE is_active = TRUE;

-- Enable Row Level Security
ALTER TABLE task_orchestration_plans ENABLE ROW LEVEL SECURITY;

-- RLS Policy: Users can only see orchestration plans for their tasks
CREATE POLICY "Users can view their task orchestration plans"
  ON task_orchestration_plans
  FOR SELECT
  USING (
    task_id IN (
      SELECT id FROM tasks 
      WHERE user_id = auth.uid()
    )
  );

-- RLS Policy: Backend service can manage all orchestration plans
CREATE POLICY "Service role can manage all orchestration plans"
  ON task_orchestration_plans
  FOR ALL
  USING (auth.role() = 'service_role');

-- Add trigger to update updated_at timestamp
CREATE TRIGGER update_task_orchestration_plans_updated_at
  BEFORE UPDATE ON task_orchestration_plans
  FOR EACH ROW
  EXECUTE FUNCTION update_updated_at_column();

-- Add comments for documentation
COMMENT ON TABLE task_orchestration_plans IS 'Stores declarative goals and dynamic execution plans created by LLM orchestrator';
COMMENT ON COLUMN task_orchestration_plans.goals IS 'Declarative goals - what to achieve, not how';
COMMENT ON COLUMN task_orchestration_plans.execution_plan IS 'Dynamic plan generated by LLM based on goals and available agents';
COMMENT ON COLUMN task_orchestration_plans.llm_response IS 'Full LLM response for debugging and analysis';