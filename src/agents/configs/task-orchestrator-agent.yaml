# Task Orchestrator Agent Configuration
# Pure orchestration - NO business logic, only coordination
# Version: 3.0.0

# Agent Identity and Role
name: "TaskOrchestratorAgent"
role: "orchestrator"
version: "3.0.0"
description: "Pure orchestration agent that coordinates workflow execution between agents"

# Agent Capabilities - WHAT it can do (orchestration only)
capabilities:
  - "workflow_sequencing"      # Sequence workflow steps
  - "agent_dispatch"           # Dispatch tasks to agents
  - "phase_transitions"        # Manage phase transitions
  - "parallel_coordination"    # Coordinate parallel tasks
  - "dependency_resolution"    # Resolve task dependencies
  - "progress_aggregation"     # Aggregate progress from agents
  - "error_routing"           # Route errors to handlers
  - "result_collection"       # Collect results from agents

# Tool Requirements - WHAT tools it needs
toolRequirements:
  - "agent_registry"     # To find and dispatch to agents
  - "task_queue"         # To manage task queuing
  - "event_bus"          # To handle inter-agent events

# A2A Protocol Configuration
a2a:
  protocolVersion: "1.0.0"
  communicationMode: "async"
  messageFormats:
    - "json"
    - "yaml"
  
  # Can orchestrate ANY agent
  routing:
    canReceiveFrom:
      - "*"  # Can receive from any agent
    canSendTo:
      - "*"  # Can send to any agent
  
  # Message handling
  messageHandling:
    bufferSize: 500  # High buffer for orchestration
    timeoutMs: 60000  # 1 minute timeout
    retryEnabled: true

# Task Execution Configuration
execution:
  maxConcurrentTasks: 20  # Can orchestrate many tasks
  timeoutMs: 300000  # 5 minute overall timeout
  
  retryStrategy:
    maxRetries: 3
    backoffMs: 2000
    exponentialBackoff: true
  
  # Performance settings
  performance:
    cachingEnabled: false  # No caching for orchestration
    batchProcessing: true
    maxBatchSize: 10

# Orchestration-Specific Configuration
orchestration:
  # How to handle parallel execution
  parallelExecution:
    enabled: true
    maxParallelAgents: 5
    joinStrategy: "wait_all"  # wait_all | wait_any | wait_n
  
  # How to handle failures
  failureHandling:
    strategy: "retry_then_fail"  # retry_then_fail | fail_fast | continue
    retryLimit: 3
    fallbackAgent: null  # No fallback by default
  
  # Progress tracking
  progressTracking:
    updateFrequency: "on_phase_complete"  # on_phase_complete | on_agent_complete | realtime
    aggregationMethod: "weighted"  # weighted | simple | custom

# Context Management (orchestration context only)
context:
  persistence: true
  shareLevel: "task"  # Orchestrator shares at task level
  
  # What context keys this agent manages
  contextKeys:
    - "workflow_state"        # Current workflow state
    - "phase_status"          # Status of each phase
    - "agent_assignments"     # Which agents are assigned
    - "execution_order"       # Order of execution
    - "dependency_graph"      # Task dependencies
    - "aggregated_results"    # Collected results

# Workflow Patterns (generic patterns, no business logic)
workflowPatterns:
  sequential:
    description: "Execute agents one after another"
    useWhen: "Dependencies exist between agents"
  
  parallel:
    description: "Execute agents simultaneously"
    useWhen: "No dependencies between agents"
  
  conditional:
    description: "Execute based on conditions"
    useWhen: "Branching logic required"
  
  iterative:
    description: "Repeat until condition met"
    useWhen: "Retry or refinement needed"

# NO business logic - all business rules come from Task Templates